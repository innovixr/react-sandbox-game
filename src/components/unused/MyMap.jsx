import { RigidBody } from "@react-three/rapier";

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.0.9 ../../public/gltf/myMap.gltf -p 3 -T
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export function Model(props) {
  const { nodes, materials } = useGLTF('/myMap-transformed.glb')
  return (
    <group {...props} dispose={null}>
      <RigidBody type="fixed" restitution={0.5} friction={0.7}>
      <mesh geometry={nodes.Terrain.geometry} material={materials.Terrain} position={[-1.05, 0, 0]} scale={57.47} />
      </RigidBody>
      <mesh geometry={nodes.Container.geometry} material={materials.ContainerBlanc} position={[13.981, 1.136, -0.485]} />
      <mesh geometry={nodes.Container001.geometry} material={materials.ContainerBleu} position={[7.999, 1.136, 0]} />
      <mesh geometry={nodes.Container002.geometry} material={nodes.Container002.material} position={[12.577, 3.416, -0.372]} rotation={[0, 0.104, 0]} />
      <mesh geometry={nodes.Container035.geometry} material={nodes.Container035.material} position={[-6.743, 3.416, -18.206]} rotation={[0, 0.104, 0]} />
      <mesh geometry={nodes.Container038.geometry} material={nodes.Container038.material} position={[-0.288, 3.416, -18.206]} rotation={[0, 0.104, 0]} />
      <mesh geometry={nodes.Container003.geometry} material={materials.ContainerBleu} position={[4.279, 1.15, 16.255]} />
      <mesh geometry={nodes.Container018.geometry} material={materials.ContainerBleu} position={[1.77, 3.416, 23.647]} rotation={[0, Math.PI / 2, 0]} />
      <mesh geometry={nodes.Container016.geometry} material={materials.ContainerOrange} position={[4.095, 1.15, 22.339]} rotation={[0, -0.055, 0]} />
      <mesh geometry={nodes.Container025.geometry} material={materials.ContainerOrange} position={[4.501, 1.15, 36.021]} rotation={[0, -0.055, 0]} />
      <mesh geometry={nodes.Container004.geometry} material={materials.ContainerOrange} position={[0.367, 0, 0]} />
      <mesh geometry={nodes.Container034.geometry} material={materials.ContainerOrange} position={[2.806, 0, -23.239]} />
      <RigidBody type="fixed" restitution={0.5} friction={0.7}>
      <mesh geometry={nodes.Container005.geometry} material={materials.ContainerOrange} position={[13.911, 1.136, 9.461]} scale={[1.017, 1, 0.9]} />
      </RigidBody>
      <mesh geometry={nodes.Container028.geometry} material={materials.ContainerOrange} position={[-19.43, 1.136, -12.895]} rotation={[0, 1.236, 0]} scale={[1.017, 1, 0.9]} />
      <mesh geometry={nodes.Container006.geometry} material={materials.ContainerOrange} position={[-0.207, 1.136, 14.195]} />
      <mesh geometry={nodes.Container020.geometry} material={materials.ContainerOrange} position={[-8.202, 1.136, 24.238]} />
      <mesh geometry={nodes.Container023.geometry} material={materials.ContainerOrange} position={[6.189, 1.136, 31.459]} />
      <mesh geometry={nodes.Container026.geometry} material={materials.ContainerOrange} position={[-2.073, 1.136, -12.497]} />
      <mesh geometry={nodes.Container007.geometry} material={materials.ContainerBlanc} position={[-6.219, 1.136, 14.741]} />
      <mesh geometry={nodes.Container019.geometry} material={materials.ContainerBlanc} position={[-4.631, 3.425, 23.965]} rotation={[0, 0.075, 0]} />
      <mesh geometry={nodes.Container022.geometry} material={materials.ContainerBlanc} position={[-20.113, 1.136, 24.247]} />
      <mesh geometry={nodes.Container024.geometry} material={materials.ContainerBlanc} position={[12.18, 1.136, 31.49]} />
      <mesh geometry={nodes.Container027.geometry} material={materials.ContainerBlanc} position={[-8.085, 1.136, -11.951]} />
      <mesh geometry={nodes.Container029.geometry} material={materials.ContainerBlanc} position={[-12.62, 1.136, -13.465]} rotation={[0, -Math.PI / 2, 0]} />
      <mesh geometry={nodes.Container008.geometry} material={materials.ContainerOrange} position={[-14.608, 1.136, 14.696]} />
      <mesh geometry={nodes.Container009.geometry} material={materials.ContainerBleu} position={[-14.606, 1.136, 10.183]} />
      <mesh geometry={nodes.Container010.geometry} material={materials.ContainerBleu} position={[-18.091, 1.136, 1.728]} />
      <mesh geometry={nodes.Container021.geometry} material={materials.ContainerBleu} position={[-14.163, 1.136, 24.261]} />
      <mesh geometry={nodes.Container030.geometry} material={materials.ContainerBleu} position={[-22.426, 1.136, -21.66]} />
      <mesh geometry={nodes.Container032.geometry} material={materials.ContainerBleu} position={[-11.174, 1.136, -17.972]} />
      <mesh geometry={nodes.Container036.geometry} material={materials.ContainerBleu} position={[-11.174, 1.136, -24.607]} />
      <mesh geometry={nodes.Container037.geometry} material={materials.ContainerBleu} position={[4.667, 1.136, -18.4]} />
      <mesh geometry={nodes.Container011.geometry} material={materials.ContainerBlanc} position={[-18.091, 1.136, -1.266]} />
      <mesh geometry={nodes.Container033.geometry} material={materials.ContainerBlanc} position={[-21.908, 3.423, -23.518]} rotation={[0, 0.361, 0]} />
      <mesh geometry={nodes.Container013.geometry} material={materials.ContainerOrange} position={[-18.091, 3.423, 1.728]} />
      <mesh geometry={nodes.Container031.geometry} material={materials.ContainerOrange} position={[-21.066, 1.136, -24.655]} />
      <mesh geometry={nodes.Container014.geometry} material={materials.ContainerBleu} position={[-18.091, 3.423, -1.279]} />
      <mesh geometry={nodes.Container012.geometry} material={materials.ContainerBleu} position={[-13.623, 1.136, 0.235]} />
      <mesh geometry={nodes.Container015.geometry} material={materials.ContainerBlanc} position={[-13.623, 3.423, 0.235]} />
      <mesh geometry={nodes.Container017.geometry} material={materials.ContainerOrange} position={[-1.307, 1.136, 23.678]} scale={[1, 1, 1.316]} />
      <mesh geometry={nodes.Escalier_exterieur.geometry} material={materials.Escalier} position={[2.498, -0.001, 5.649]} />
      <mesh geometry={nodes.Escalier_exterieur001.geometry} material={materials.Escalier} position={[-5.649, 0.385, -2.498]} rotation={[0, -Math.PI / 2, 0]} />
      <mesh geometry={nodes.Escalier_exterieur002.geometry} material={materials.Escalier} position={[2.498, 0.385, -5.649]} rotation={[-Math.PI, 0, -Math.PI]} />
      <mesh geometry={nodes.Escalier_interieur.geometry} material={nodes.Escalier_interieur.material} position={[4.116, 1.02, 2]} />
      <mesh geometry={nodes.MaisonEtage.geometry} material={materials.MaisonEtage} position={[0, 3.1, 0]} scale={[1.023, 1, 1.023]} />
      <mesh geometry={nodes.MaisonMur.geometry} material={materials.MaisonMur} />
      <mesh geometry={nodes.MaisonPlancher.geometry} material={materials.MaisonEtage} position={[0, 0.043, 0]} scale={[1.02, 0.958, 1.02]} />
      <mesh geometry={nodes.MaisonToit.geometry} material={materials.MaisonEtage} position={[0, 6.312, 0]} scale={[1.02, 0.958, 1.02]} />
      <mesh geometry={nodes.Plane.geometry} material={materials.Murs} position={[1.555, 1.15, 38.988]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Plane001.geometry} material={materials.Murs} position={[-1.445, 1.15, 38.988]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Plane002.geometry} material={materials.Murs} position={[-4.445, 1.15, 38.988]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Plane003.geometry} material={materials.Murs} position={[-7.447, 1.15, 38.988]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Plane004.geometry} material={materials.Murs} position={[-8.993, 1.15, 37.485]} rotation={[Math.PI / 2, 0, Math.PI / 2]} />
      <mesh geometry={nodes.Plane005.geometry} material={materials.Murs} position={[-8.993, 1.15, 34.494]} rotation={[Math.PI / 2, 0, Math.PI / 2]} />
      <mesh geometry={nodes.Plane006.geometry} material={materials.Murs} position={[-8.993, 1.15, 31.484]} rotation={[Math.PI / 2, 0, Math.PI / 2]} />
      <mesh geometry={nodes.Plane007.geometry} material={materials.Murs} position={[-8.993, 1.15, 27.997]} rotation={[Math.PI / 2, 0, Math.PI / 2]} scale={[1.327, 1, 1]} />
      <mesh geometry={nodes.Plane008.geometry} material={materials.Murs} position={[-16.247, 1.15, 26.006]} rotation={[Math.PI / 2, 0, 0]} scale={[4.871, 1, 1]} />
      <mesh geometry={nodes.Plane009.geometry} material={materials.Murs} position={[-25.385, 1.15, 16.87]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[4.871, 1, 1]} />
      <mesh geometry={nodes.Plane010.geometry} material={materials.Murs} position={[15.235, 1.15, 31.484]} rotation={[Math.PI / 2, 0, Math.PI / 2]} />
      <mesh geometry={nodes.Plane011.geometry} material={materials.Murs} position={[22.195, 1.15, 9.316]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[4.871, 1, 1]} />
      <mesh geometry={nodes.Plane012.geometry} material={materials.Murs} position={[16.731, 1.15, 18.455]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Plane013.geometry} material={materials.Murs} position={[16.731, 1.15, -11.436]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Plane014.geometry} material={materials.Murs} position={[9.012, 1.15, -16.846]} rotation={[Math.PI / 2, 0, Math.PI / 2]} />
      <mesh geometry={nodes.Plane015.geometry} material={materials.Murs} position={[-16.247, 1.15, -26.105]} rotation={[Math.PI / 2, 0, 0]} scale={[4.871, 1, 1]} />
      <mesh geometry={nodes.Plane016.geometry} material={materials.Murs} position={[3.697, 1.15, -25.558]} rotation={[Math.PI / 2, 0, Math.PI / 2]} />
      <mesh geometry={nodes.Plane017.geometry} material={materials.Murs} position={[6.809, 1.15, -20.138]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Cube.geometry} material={materials.Caisse} position={[-16.483, 0, 15.636]} />
      <mesh geometry={nodes.Cube001.geometry} material={materials.Caisse} position={[-16.483, 0, 14.846]} />
      <mesh geometry={nodes.Cube002.geometry} material={materials.Caisse} position={[-16.483, 0, 13.986]} />
      <mesh geometry={nodes.Cube003.geometry} material={materials.Caisse} position={[-16.483, 0, 13.196]} />
      <mesh geometry={nodes.Cube004.geometry} material={materials.Caisse} position={[-16.483, 0, 12.391]} />
      <mesh geometry={nodes.Cube005.geometry} material={materials.Caisse} position={[-16.483, 0, 11.696]} />
      <mesh geometry={nodes.Cube006.geometry} material={materials.Caisse} position={[-17.251, 0, 14.846]} />
      <mesh geometry={nodes.Cube007.geometry} material={materials.Caisse} position={[-17.251, 0, 14.081]} />
      <mesh geometry={nodes.Cube008.geometry} material={materials.Caisse} position={[-17.251, 0, 13.291]} />
      <mesh geometry={nodes.Cube009.geometry} material={materials.Caisse} position={[-17.251, 0, 12.486]} />
      <mesh geometry={nodes.Cube010.geometry} material={materials.Caisse} position={[-16.483, 0.75, 14.322]} />
      <mesh geometry={nodes.Cube011.geometry} material={materials.Caisse} position={[-16.539, 0.75, 13.557]} />
      <mesh geometry={nodes.Cube012.geometry} material={materials.Caisse} position={[-16.757, 0.75, 12.767]} />
      <mesh geometry={nodes.Cube013.geometry} material={materials.Caisse} position={[-24.934, 0, 13.817]} />
      <mesh geometry={nodes.Cube014.geometry} material={materials.Caisse} position={[-24.715, 0.75, 13.733]} rotation={[Math.PI, -1.239, Math.PI]} />
      <mesh geometry={nodes.Cube015.geometry} material={materials.Caisse} position={[-24.134, 0, 13.817]} />
      <mesh geometry={nodes.Cube016.geometry} material={materials.Caisse} position={[16.374, 0, 18.003]} />
      <mesh geometry={nodes.Cube017.geometry} material={materials.Caisse} position={[16.594, 0.75, 17.92]} rotation={[Math.PI, -1.239, Math.PI]} />
      <mesh geometry={nodes.Cube018.geometry} material={materials.Caisse} position={[17.149, 0, 18.003]} />
      <mesh geometry={nodes.Cube019.geometry} material={materials.Caisse} position={[17.397, 0, -0.088]} rotation={[0, Math.PI / 2, 0]} />
      <mesh geometry={nodes.Cube020.geometry} material={materials.Caisse} position={[17.359, 0.75, -0.599]} rotation={[0, 0.033, 0]} />
      <mesh geometry={nodes.Cube021.geometry} material={materials.Caisse} position={[17.397, 0, -1.115]} rotation={[0, Math.PI / 2, 0]} />
    </group>
  )
}

useGLTF.preload('/myMap-transformed.glb')
